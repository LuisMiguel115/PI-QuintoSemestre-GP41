      {/* Modal */}
      {showModal && (
        <div className="dashboard-modal">
          <div className="modal-dialog">
            <div className="modal-content">
              <div className="modal-header">
                <h5 className="modal-title">Adicionar Tarefa</h5>
                <button type="button" className="modal-close" onClick={fecharModal}></button>
              </div>
              <div className="modal-body">
                <div className="form-group">
                  <label className="form-label">Nome da Tarefa</label>
                  <input
                    type="text"
                    className="form-control"
                    value={novaTarefa}
                    onChange={(e) => setNovaTarefa(e.target.value)}
                    autoFocus
                  />
                </div>
                <div className="form-group">
                  <label className="form-label">Cor da Tarefa</label>
                  <input
                    type="color"
                    className="form-control-color"
                    value={novaCor}
                    onChange={(e) => setNovaCor(e.target.value)}
                    title="Escolha uma cor"
                  />
                </div>
              </div>
              <div className="modal-footer">
                <button type="button" className="btn-secondary" onClick={fecharModal}>Cancelar</button>
                <button type="button" className="btn-primary" onClick={cadastrarTarefa}>Cadastrar</button>
              </div>
            </div>
          </div>
        </div>
      )}











              {/* Main Content */}
        <div className="dashboard-main">
          <div className="dashboard-header">
            <div>
              <h2 className="dashboard-title">Dashboard</h2>
              <p className="dashboard-subtitle">Tasks, Scheduling, etc.</p>
            </div>

                    <div className="list-container">
          <h2 className="list-header">Minhas Listas</h2>
          <form onSubmit={handleCreateList} className="form-group">
            <div style={{ display: 'flex', gap: '10px' }}>
              <input
                type="text"
                className="form-control"
                placeholder="Nome da nova lista"
                value={newListName}
                onChange={(e) => setNewListName(e.target.value)}
                required
              />
              <button type="submit" className="btn">Criar</button>
            </div>
          </form>

          {taskLists.length === 0 ? (
            <p>Nenhuma lista criada ainda.</p>
          ) : (
            <ul style={{ listStyle: 'none' }}>
              {taskLists.map((list) => (
                <li key={list.id} className="list-item">
                  <a 
                    href={`/list/${list.id}`} 
                    style={{ flex: 1, textDecoration: 'none', color: 'inherit' }}
                    onClick={(e) => {
                      e.preventDefault();
                      navigate(`/list/${list.id}`);
                    }}
                  >
                    {list.name}
                  </a>
                  <button 
                    onClick={() => handleDeleteList(list.id)} 
                    className="btn btn-danger"
                    style={{ padding: '5px 10px' }}
                  >
                    Excluir
                  </button>
                </li>
              ))}
            </ul>
          )}
        </div>
        
            <div className="dashboard-actions">
              {botoes.map((btn, index) => (
                <button
                  key={index}
                  type="button"
                  className={`action-btn ${btn.className}`}
                  onClick={() => btn.onClick?.()}
                >
                  {btn.label}
                </button>
              ))}
            </div>
          </div>

          <div className="tasks-container">
            {tarefas.map((tarefa, index) => (
              <Tarefa
                key={tarefa._id || index}
                tarefa={tarefa}
                onDelete={handleDeletarTarefa}
                onComplete={completar}
              />
            ))}
          </div>
        </div>








/* Main Container */
.dashboard-container {
  height: 100vh;
  width: 100Vw;
}


.dashboard-content {
  display: flex;
  background-color: #212529;
  color: white;
  height: 100%;
}

/* Sidebar Styles */
.dashboard-sidebar {
  background-color: black;
  padding: 1rem;
  width: 250px;
}

.sidebar-title {
  color: #0dcaf0;
}

.sidebar-menu {
  list-style: none;
  padding: 0;
  margin-top: 1.5rem;
}

.menu-item {
  margin-bottom: 0.5rem;
}

.menu-link {
  background: none;
  border: none;
  color: white;
  text-align: left;
  width: 100%;
  padding: 0.5rem;
  cursor: pointer;
}

.menu-link:hover {
  color: #0dcaf0;
}

/* Main Content Styles */
.dashboard-main {
  flex-grow: 1;
  padding: 1.5rem;
}

.dashboard-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
}

.dashboard-title {
  margin-bottom: 0;
}

.dashboard-subtitle {
  color: #6c757d;
  margin-bottom: 0;
}

.dashboard-actions {
  display: flex;
  gap: 0.5rem;
}

.action-btn {
  padding: 0.375rem 0.75rem;
  border-radius: 0.25rem;
  border: none;
  cursor: pointer;
}

/* Tasks Container */
.tasks-container {
  margin-top: 1.5rem;
}

/* Modal Styles */
.dashboard-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  z-index: 1050;
  display: block;
}

.modal-dialog {
  max-width: 500px;
  margin: 1.75rem auto;
  position: relative;
  width: auto;
}

.modal-content {
  background-color: #212529;
  color: white;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 0.3rem;
  outline: 0;
}

.modal-header {
  border-bottom: 1px solid #495057;
  padding: 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.modal-title {
  margin: 0;
}

.modal-close {
  background: none;
  border: none;
  color: white;
  font-size: 1.5rem;
  cursor: pointer;
}

.modal-body {
  padding: 1rem;
}

.modal-footer {
  border-top: 1px solid #495057;
  padding: 1rem;
  display: flex;
  justify-content: flex-end;
  gap: 0.5rem;
}

.form-group {
  margin-bottom: 1rem;
}

.form-label {
  display: block;
  margin-bottom: 0.5rem;
}

.form-control {
  display: block;
  width: 100%;
  padding: 0.375rem 0.75rem;
  background-color: #495057;
  border: 1px solid #6c757d;
  border-radius: 0.25rem;
  color: white;
}

.form-control-color {
  width: 3rem;
  height: 2.5rem;
  padding: 0.375rem;
}

/* Button Styles */
.btn-primary {
  background-color: #0d6efd;
  color: white;
}

.btn-secondary {
  background-color: #6c757d;
  color: white;
}

.btn-primary:hover, .btn-secondary:hover {
  opacity: 0.8;
}